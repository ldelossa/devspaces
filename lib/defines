FEDORA_VERSION_ID = $(shell cat /etc/os-release | grep VERSION_ID | cut -d '=' -f 2)
USER = $(shell whoami)
UID = $(shell id -u)
GID = $(shell id -g)
HOME_PATH = $(shell echo $$HOME)
XDG_RUNTIME_DIR = $(shell echo $$XDG_RUNTIME_DIR)
SYS_PATH = /sys
RUNTIME = docker

REPO_NAME = devspace
# CONTAINER_NAME defined in devspace specific makefile.
REPO_CONTAINER_NAME = $(REPO_NAME)/$(CONTAINER_NAME)
# CONTAINER_VERSION defined in devspace specific makefile.
CONTAINER_TAG = $(REPO_CONTAINER_NAME):$(CONTAINER_VERSION)

define LIB_BUILD_IF_REQUIRED
	$(shell docker inspect $(CONTAINER_TAG) > /dev/null)
	$(if $(filter $(.SHELLSTATUS), 0),,make $(CONTAINER_NAME))
endef

define LIB_BUILD_CONTAINER 
    docker build --build-arg version_id=$(FEDORA_VERSION_ID) -t $(CONTAINER_TAG) .
    docker tag $(CONTAINER_TAG) $(REPO_CONTAINER_NAME)
endef 

define LIB_RUN_CONTAINER_AS_USER
	-$(RUNTIME) run -d --privileged \
		-l devspace \
		-v $(SYS_PATH):$(SYS_PATH) \
		-v /etc/group:/etc/group:ro \
		-v /etc/passwd:/etc/passwd:ro \
		-v /etc/shadow:/etc/shadow:ro \
		-v $(HOME_PATH):$(HOME_PATH) \
		-v $(XDG_RUNTIME_DIR):$(XDG_RUNTIME_DIR) \
		--user $(UID):$(GID) \
		--name $(CONTAINER_NAME) \
		 $(CONTAINER_TAG) &>/dev/null
endef

define LIB_RUN_CONTAINER_AS_USER_UNSHARE_NET
	-$(RUNTIME) run -d --privileged \
		-l devspace \
		-v $(SYS_PATH):$(SYS_PATH) \
		-v /etc/group:/etc/group:ro \
		-v /etc/passwd:/etc/passwd:ro \
		-v /etc/shadow:/etc/shadow:ro \
		-v $(HOME_PATH):$(HOME_PATH) \
		-v $(XDG_RUNTIME_DIR):$(XDG_RUNTIME_DIR) \
		--user $(UID):$(GID) \
		--name $(CONTAINER_NAME) \
        --net=host \
		 $(CONTAINER_TAG) &>/dev/null
endef

define LIB_EXEC_CONTAINER_WITH_WORKING_DIR
    $(RUNTIME) start $(CONTAINER_NAME) > /dev/null
	$(RUNTIME) exec -it --env-file <(env) -e "DEVSPACE=devspace/$(CONTAINER_NAME)" -w $(WORKING_DIR) $(CONTAINER_NAME) zsh
endef
